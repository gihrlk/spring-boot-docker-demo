name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build and Test with Maven
      run: ./mvnw -B clean verify
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          target/surefire-reports/
          target/failsafe-reports/
    
    - name: Build Docker Image
      run: docker build -t spring-boot-docker-demo:${{ github.sha }} .
    
    - name: Run Container Tests
      run: |
        docker run -d --name test-app -p 8080:8080 spring-boot-docker-demo:${{ github.sha }}
        sleep 30
        curl -f http://localhost:8080/actuator/health || exit 1
        curl -f http://localhost:8080/users || exit 1
        docker stop test-app
        docker rm test-app 