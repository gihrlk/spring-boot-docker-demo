name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
    
    - name: Debug directory structure
      run: |
        pwd
        ls -la
        ls -la target || echo "No target directory yet"
    
    - name: Build and Test with Maven
      run: ./mvnw -B clean verify -Dmaven.test.failure.ignore=true
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SPRING_PROFILES_ACTIVE: test
    
    - name: Debug test results
      if: always()
      run: |
        echo "Listing target directory:"
        ls -la target || echo "No target directory"
        echo "Listing surefire reports:"
        ls -la target/surefire-reports || echo "No surefire-reports directory"
        echo "Listing failsafe reports:"
        ls -la target/failsafe-reports || echo "No failsafe-reports directory"
        echo "Listing test classes:"
        ls -la target/test-classes || echo "No test-classes directory"
        
        # Create empty directories if needed to prevent artifact upload failure
        mkdir -p target/surefire-reports
        mkdir -p target/failsafe-reports
        
        # Create a dummy file if directories are empty
        touch target/surefire-reports/dummy.txt
        touch target/failsafe-reports/dummy.txt
    
    - name: Upload Test Results (Surefire)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: surefire-reports
        path: target/surefire-reports
        if-no-files-found: warn
    
    - name: Upload Test Results (Failsafe)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: failsafe-reports
        path: target/failsafe-reports
        if-no-files-found: warn
    
    - name: Build Docker Image
      run: docker build -t spring-boot-docker-demo:${{ github.sha }} .
    
    - name: Run Container Tests
      run: |
        docker run -d --name test-app -p 8080:8080 spring-boot-docker-demo:${{ github.sha }}
        sleep 30
        curl -f http://localhost:8080/actuator/health || exit 1
        curl -f http://localhost:8080/users || exit 1
        docker stop test-app
        docker rm test-app 